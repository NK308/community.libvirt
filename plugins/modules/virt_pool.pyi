from ansible.basic.module_utils.core import AnsibleModule
from ansible_collections.community.libvirt.plugins.module_utils import LibvirtConnection
from libvirt import virConnect, virStoragePool
from typing import overload, Optional

ENTRY_COMMANDS: list[str]
HOST_COMMANDS: list[str]
ENTRY_STATE_INFO_MAP: dict[int, str]
ENTRY_BUILD_FLAGS_MAP: dict[str, int]
ENTRY_DELETE_FLAGS_MAP: dict[str, int]


class VirtStoragePool:
    module: AnsibleModule
    uri: str
    conn: LibvirtConnection

    def get_pool(self, entryid: str) -> virStoragePool: ...

    def list_pools(self, state: Optional[str]) -> list[str]: ...

    def state(self) -> list[str]: ...

    def autostart(self, entryid: str) -> str: ...
    def get_autostart(self, entryid: str) -> str: ...
    def set_autostart(self, entryid: str, state) -> str: ...

    def define(self, entryid: str, xml: str): ...
    def create(self, entryid: str): ...
    def start(self, entryid: str): ...
    def stop(self, entryid: str): ...
    def destroy(self, entryid: str): ...
    def undefine(self, entryid: str): ...
    def build(self, entryid: str, flags): ...
    def delete(self, entryid: str, flags): ...
    def refresh(self, entryid: str): ...

    def status(self, entryid: str) -> str: ...
    def get_xml(self, entryid: str) -> str: ...
    def info(self): ...
    def facts(self, facts_mode: Optional[str] = 'facts') -> dict: ...
